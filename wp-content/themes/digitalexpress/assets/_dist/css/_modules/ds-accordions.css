@charset "UTF-8";
/**
 ############################
 #   MODULE: Accordions
 ############################
 */
/*
.sixteen-nine {
	@include aspect-ratio(16,9);
}*/
/* Media Queries Breakpoints */
/**
* *******************
*  Usage examples
* *******************
*
//
//  use <=
*   ALWAYS use <= ( '<' with '=' character) for all breakpoints
*   when setting max-width, ex: max-width: 767px,
*
*   so max-width: 1440px  == media('<=desktop-l')
*
* ***********************************************
*
//  use >
*   ALWAYS use only > as single character for all breakpoints
*   when setting min-width, ex: min-width: 768px,
*
*   so min-width: 1025px  == media('>desktop')
*
*************************************************
*
*## EXAMPLE:
*
*   (min-width: 768px) and (max-width: 1024px)
*   =
*   media ('>tablet'), ('<=desktop')
*
//

 */
/**
 ################
 #   Module TABS:
 ################
 */
.l-accordion {
  display: flex;
  width: 100%;
  gap: var(--columns-gap);
}
@media (max-width: 767px) {
  .l-accordion {
    flex-direction: column-reverse;
  }
}
@media (min-width: 768px) {
  .l-accordion.order-reverse {
    flex-direction: row-reverse;
  }
}
.l-accordion__content {
  flex: 1 1 auto;
}
.l-accordion__content .c-block__btn {
  margin-top: 1em;
}
.l-accordion__media {
  flex: 0 0 var(--columns-ratio);
}
@media (max-width: 767px) {
  .l-accordion__media {
    margin: 1em 0;
  }
}
.l-accordion__imgs {
  display: none;
}
.l-accordion__imgs.is-active {
  display: block;
}
.l-accordion__imgs .c-image__primary {
  top: 0;
}

@media (max-width: 767px) {
  .c-accordion__media .c-image {
    position: relative;
  }
  .c-accordion__media .c-image:before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: 75%;
  }
  .c-accordion__media .c-image > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

.c-accordion {
  display: flex;
  flex-direction: column;
  width: 100%;
}
.c-accordion__title {
  padding: var(--c-block-gt) var(--c-block-gr) var(--c-block-gb) var(--c-block-gl);
  font-size: var(--acc-title-size);
  font-weight: var(--acc-title-weight);
  cursor: pointer;
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  border: none;
  text-align: left;
  color: var(--c-block-title-color);
  background-color: var(--c-block-title-bg-color);
  transition: color var(--base-transition), background-color var(--base-transition);
}
.c-accordion__title:focus {
  outline: none;
}
.c-accordion__title:focus-visible {
  outline: 2px solid var(--outline-color);
  outline-offset: 1px;
}
@media (max-width: 767px) {
  .c-accordion__title {
    padding: 10px;
  }
}
.c-accordion__title-wrap {
  margin: 0;
}
.is-active .c-accordion__title-wrap {
  --c-block-title-bg-color: var(--c-block-text-bg-color);
}
.c-accordion__icon {
  width: var(--acc-icon-width);
  margin-right: 10px;
  object-fit: cover;
}
.c-accordion__content {
  background-color: var(--c-block-text-bg-color);
  color: var(--c-block-text-color);
  padding: 0 var(--c-block-gr) var(--c-block-gb) var(--c-block-gl);
  transition: all 0.3s;
}
@media (max-width: 767px) {
  .c-accordion__content {
    padding: 10px;
  }
}
.c-accordion__content p:last-child {
  margin-bottom: 0;
}
.c-accordion__item {
  margin-bottom: var(--acc-item-space);
  border-bottom: 1px solid var(--c-block-border-color);
}

.l-accordion[data-animation=css] .c-accordion__content {
  display: none;
  transform: scale(0);
  opacity: 0;
  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
}
.l-accordion[data-animation=css] .is-active .c-accordion__content {
  display: block;
  transform: scale(1);
  opacity: 1;
  animation: acc-anim 0.3s ease-in-out;
}

@keyframes acc-anim {
  0% {
    display: none;
    opacity: 0;
  }
  1% {
    display: block;
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/* Accordions */
.c-accordion-v2 {
  --c-acc-padding: 80px;
  --c-acc-border: 4px;
}
.c-accordion-v2 .c-accordion__item {
  position: relative;
  padding-left: var(--c-acc-padding);
}
@media (max-width: 767px) {
  .c-accordion-v2 .c-accordion__item {
    --c-acc-padding: 20px;
  }
}
.c-accordion-v2 .c-accordion__item:after, .c-accordion-v2 .c-accordion__item:before {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  content: "";
  opacity: 0;
  transform: translate(0, var(--c-acc-border));
  transition: opacity 0.3s, transform 0.3s;
}
.c-accordion-v2 .c-accordion__item:before {
  width: var(--c-acc-border);
  background: var(--primary-color2);
  border-radius: 4px;
}
.c-accordion-v2 .c-accordion__item:after {
  width: 0;
  height: 0;
  margin: 0 auto;
  border-bottom: 7px solid transparent;
  border-top: 7px solid transparent;
  border-left: 11px solid var(--primary-color2);
  top: 50%;
  transform: translateY(-50%);
  left: 1px;
}
.c-accordion-v2 .c-accordion__item.is-active:before {
  transform: translate(0, 0);
  opacity: 1;
}
.c-accordion-v2 .c-accordion__item.is-active:after {
  transform: translate(0, -50%);
  opacity: 1;
}

.m-accordion {
  --columns-ratio: 50%;
  --columns-gap: 5%;
  --c-block-gl: 0px;
  --c-block-gr: 0px;
  --c-block-gt: 0px;
  --c-block-gb: 0px;
  --c-block-border-color: transparent;
  --c-block-title-bg-color: transparent;
  --c-block-text-bg-color: transparent;
  --c-block-title-color: currentColor;
  --c-block-text-color: currentColor;
  --acc-item-space: .1em;
}

.c-accordion {
  --acc-icon-width: 60px;
  --acc-title-size: inherit;
  --acc-title-weight: inherit;
}
.c-accordion__title {
  /* Accordion Arrow */
}
.icons-plus-minus .c-accordion__title, .icons-arrows .c-accordion__title {
  padding-right: 40px;
}
.icons-plus-minus .c-accordion__title:after, .icons-arrows .c-accordion__title:after {
  position: absolute;
  right: 0;
  top: 0;
  width: 40px;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: currentColor;
  transition: all 0.3s;
}
.icons-plus-minus .c-accordion__title:after {
  content: "+";
}
.icons-arrows .c-accordion__title:after {
  content: "▼";
}

.icons-plus-minus .is-active .c-accordion__title:after {
  content: "–";
}

.icons-arrows .is-active .c-accordion__title:after {
  transform: rotate(180deg);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
