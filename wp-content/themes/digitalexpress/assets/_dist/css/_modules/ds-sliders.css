/**
 ############################
 #   MODULE: SLIDERS
 ############################
 */
/*
.sixteen-nine {
	@include aspect-ratio(16,9);
}*/
/* Media Queries Breakpoints */
/**
* *******************
*  Usage examples
* *******************
*
//
//  use <=
*   ALWAYS use <= ( '<' with '=' character) for all breakpoints
*   when setting max-width, ex: max-width: 767px,
*
*   so max-width: 1440px  == media('<=desktop-l')
*
* ***********************************************
*
//  use >
*   ALWAYS use only > as single character for all breakpoints
*   when setting min-width, ex: min-width: 768px,
*
*   so min-width: 1025px  == media('>desktop')
*
*************************************************
*
*## EXAMPLE:
*
*   (min-width: 768px) and (max-width: 1024px)
*   =
*   media ('>tablet'), ('<=desktop')
*
//

 */
.m-slider {
  position: relative;
}
.m-slider.container-fluid {
  padding-inline: 0;
}
.m-slider .swiper-slide {
  height: auto;
}
.m-slider__container {
  z-index: 0;
}
@media (max-width: 1112px) {
  .m-slider__slide {
    height: auto;
  }
}
.m-slider__img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.m-slider.has-tabs .m-slider__container {
  padding-bottom: 0 !important;
}
.m-slider.has-pagination .m-slider__container {
  padding-bottom: 40px;
}
.m-slider [data-slider-autoplay-continuously="1"] .swiper-wrapper {
  transition-timing-function: linear;
}

/**
 #################
 #   DSBLS SLIDER:
 #################
 */
/* DSBLS Slider */
@media (max-width: 1112px) {
  .l-slider-double-cards .m-slider__container {
    display: none;
  }
}
.l-slider-double-cards .m-slider__slide {
  height: auto;
}
@media (min-width: 1113px) {
  .l-slider-double-cards .m-slider__arrows {
    display: none;
  }
}
@media (max-width: 1112px) {
  .l-slider-double-cards .m-slider__arrows {
    display: flex;
  }
}
.l-slider-double-cards .m-slide {
  max-height: var(--dsbls-height);
}
@media (min-width: 1113px) {
  .l-slider-double-cards .m-slide {
    width: 100%;
    height: 100%;
    display: flex;
    position: relative;
  }
}
.l-slider-double-cards .m-slide__media, .l-slider-double-cards .m-slide__media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.l-slider-double-cards .m-slide__img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}
@media (min-width: 1113px) {
  .l-slider-double-cards .l-slider-nav {
    position: absolute;
    inset: 0;
    z-index: 3;
  }
}
.l-slider-double-cards .l-slider-nav__container {
  display: flex;
  height: 100%;
}
@media (min-width: 1113px) {
  .l-slider-double-cards .l-slider-nav__container--fluid {
    padding: 0;
  }
}
.l-slider-double-cards .l-slider-nav__inner {
  height: 100%;
  width: 100%;
}
.l-slider-double-cards .l-slider-nav__pagination {
  display: flex;
  justify-content: center;
  margin-block: 30px;
}
@media (min-width: 1113px) {
  .l-slider-double-cards .l-slider-nav__pagination {
    display: none;
  }
}
.l-slider-double-cards.container:after,
.l-slider-double-cards.container .l-slider-nav {
  left: var(--page-gutter);
  right: var(--page-gutter);
  width: auto;
}

.l-slider-double-cards {
  padding-block: 0;
}

.c-block-dsbls {
  position: relative;
  border-radius: 0;
  color: var(--dsbls-color);
}
.c-block-dsbls .c-block__body {
  position: relative;
  z-index: 2;
}
.c-block-dsbls:before, .c-block-dsbls:after {
  content: "";
  position: absolute;
  width: 100%;
  z-index: 0;
  pointer-events: none;
  transition: all 0.3s;
}
.c-block-dsbls:before {
  inset: 0;
  background-color: var(--dsbls-overlay);
  opacity: 0.7;
}
@media (min-width: 1113px) {
  .c-block-dsbls:before {
    opacity: 0;
  }
}
.c-block-dsbls:after {
  height: 50%;
  bottom: 0;
  left: 0;
  background-image: linear-gradient(to bottom, transparent 0%, var(--dsbls-overlay) 100%);
  background-repeat: repeat-x;
}
@media (min-width: 1113px) {
  .c-block-dsbls {
    justify-content: flex-end;
    flex-direction: column;
    display: flex;
    padding: 3rem;
    width: 100%;
  }
  .c-block-dsbls:not(:last-child) {
    border-right: 1px solid rgba(255, 255, 255, 0.3);
  }
}
@media (min-width: 1281px) {
  .c-block-dsbls {
    padding: 5rem;
  }
}
@media (max-width: 1112px) {
  .c-block-dsbls {
    position: relative;
    justify-content: flex-end;
    flex-direction: column;
    min-height: 350px;
    height: 100%;
    width: 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
}
@media (max-width: 767px) {
  .c-block-dsbls {
    min-width: 100%;
  }
}
@media (min-width: 1113px) {
  .c-block-dsbls {
    cursor: pointer;
  }
  .c-block-dsbls:hover:before {
    opacity: 1;
  }
}
@media (min-width: 1113px) {
  .c-block-dsbls.is-active:before {
    opacity: 0.5;
  }
  .c-block-dsbls.is-active:after {
    height: 30%;
    background-image: linear-gradient(to bottom, transparent 0%, var(--dsbls-overlay) 100%);
    background-repeat: repeat-x;
  }
}
.c-block-dsbls.is-active .c-block__description {
  max-height: 10em;
  transition: max-height 0.3s ease-in;
}
.c-block-dsbls .c-block {
  color: var(--dsbls-color);
}
.c-block-dsbls .c-block__title {
  font-size: var(--dsbls-title-size);
  font-weight: var(--dsbls-title-weight);
  margin-bottom: 0.5em;
}
@media (max-width: 1112px) {
  .c-block-dsbls .c-block__body {
    padding: 3rem 2rem;
  }
}
@media (max-width: 575px) {
  .c-block-dsbls .c-block__body {
    text-align: center;
  }
}
.c-block-dsbls .c-block__description {
  font-size: var(--dsbls-text-size);
}
@media (min-width: 1113px) {
  .c-block-dsbls .c-block__description {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }
}
@media (min-width: 1113px) {
  .c-block-dsbls .c-picture {
    display: none;
  }
}
@media (max-width: 1112px) {
  .c-block-dsbls .c-picture img, .c-block-dsbls .c-picture picture {
    position: absolute;
    inset: 0;
    object-fit: cover;
    z-index: -1;
  }
}

.l-slider-images .m-slide {
  margin: auto;
}
.l-slider-images .m-slide__link,
.l-slider-images .m-slide .c-popup-link {
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
}
.l-slider-images .m-slider__slide {
  text-align: center;
  display: flex;
}
@media (max-width: 767px) {
  .l-slider-images .m-slider__slide {
    width: 80px;
  }
}
.l-slider-images .m-slider__slide.is-greyscale {
  filter: grayscale(1);
  transition: filter var(--base-transition);
}
.l-slider-images .m-slider__slide.is-greyscale:hover {
  filter: grayscale(0);
}
.acf-block-preview .l-slider-images .m-slider__slide {
  width: auto;
  min-width: 150px;
  text-align: center;
}
.l-slider-images .m-slide__media img {
  max-width: 75px;
  min-height: 15px;
  max-height: 150px;
}
@media (min-width: 768px) {
  .l-slider-images .m-slide__media img {
    max-width: 90%;
  }
}

.l-slider-extended .m-banner {
  height: var(--bannerHeight);
}
.l-slider-extended .m-banner__media {
  position: unset;
}
.l-slider-extended .m-banner__picture {
  position: unset;
}
.l-slider-extended .m-slider__content {
  display: flex;
  flex-direction: row-reverse;
  margin-top: 50px;
}
.l-slider-extended .l-slider-nav {
  flex: 0 0 41.6667%;
  max-width: 41.6667%;
  display: flex;
}
.l-slider-extended .l-slider-nav__wrap {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}
.l-slider-extended .l-slider-content {
  flex: 0 0 58.3333%;
  max-width: 58.3333%;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  z-index: 1;
  color: black;
}
.l-slider-extended .l-slider-content__wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}
.l-slider-extended .c-slider-progress {
  height: 100px;
  width: 4px;
  background-color: rgba(65, 57, 57, 0.4);
  flex: 0 0 4px;
}
.l-slider-extended .c-slider-progress-fill {
  --fillProgress: 0;
  width: 100%;
  background-color: var(--primary-color2);
  height: 100%;
  transform: scale(1, var(--fillProgress));
  transform-origin: 0 0;
}
.l-slider-extended .c-slider-nav {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  margin-left: 30px;
}
.l-slider-extended .c-slider-nav__item {
  cursor: pointer;
}
.l-slider-extended .c-slider-nav__item.is-active {
  color: var(--primary-color2);
}

/* Slider Navigation / Arrows */
.m-slider {
  /* Outer Arrows */
  /* Bottom Arrows */
}
@media (max-width: 1112px) {
  .m-slider {
    --swiper-outer-gap: 40px;
  }
}
.m-slider .m-slider__arrows {
  background: var(--swiper-arrows-bg);
  box-shadow: var(--swiper-arrows-shadow);
  min-width: var(--swiper-navigation-size);
  padding: 0;
  margin: 0;
  transition: all 0.2s;
}
.m-slider__arrows {
  border-radius: 100%;
}
.is-rectangular .m-slider__arrows {
  border-radius: 0;
  width: calc(var(--swiper-navigation-size) / 1.5);
  height: calc(var(--swiper-navigation-size) * 1.5);
  min-width: calc(var(--swiper-navigation-size) / 1.5);
}
.is-square .m-slider__arrows {
  border-radius: 0;
}
.m-slider__arrows:after {
  display: none;
  content: none;
}
.m-slider__arrows .arrow-icon {
  max-width: 50%;
  color: var(--primary-color1);
  fill: var(--primary-color1);
}
@media (min-width: 1113px) {
  .m-slider__arrows.-next {
    right: calc(var(--page-gutter) + 10px);
  }
}
@media (min-width: 1113px) {
  .m-slider__arrows.-prev {
    left: calc(var(--page-gutter) + 10px);
  }
}
.m-slider__arrows.-prev .arrow-icon {
  transform: rotate(180deg);
}
.m-slider__arrows:focus {
  outline: none;
}
.m-slider__arrows:focus-visible {
  outline: 2px solid var(--outline-color);
  outline-offset: 1px;
}
.m-slider__arrows:hover .arrow-icon {
  color: var(--primary-color2);
}
.m-slider [data-slider-navigation=inner-arrows] + .m-slider__nav .m-slider__arrows,
.m-slider [data-slider-navigation=outer-arrows] + .m-slider__nav .m-slider__arrows {
  transform: translateY(-50%);
  top: 50%;
}
@media (min-width: 768px) {
  .m-slider [data-slider-navigation=outer-arrows] {
    margin-inline: var(--swiper-outer-gap);
  }
}
.m-slider [data-slider-navigation=bottom-arrows] + .m-slider__nav {
  display: flex;
  justify-content: center;
  height: 30px;
}
.m-slider [data-slider-navigation=bottom-arrows] + .m-slider__nav .m-slider__arrows {
  margin: 0 10px;
  position: relative;
  left: unset;
  right: unset;
}
.m-slider [data-slider-pagination=progressbar] + .m-slider__nav,
.m-slider [data-slider-pagination=combo] + .m-slider__nav {
  justify-content: flex-end;
  transform: translateY(-100%);
  z-index: 10;
  position: relative;
}
.m-slider [data-slider-pagination=progressbar] + .m-slider__nav .m-slider__arrows,
.m-slider [data-slider-pagination=combo] + .m-slider__nav .m-slider__arrows {
  top: 0;
}

/* Slider Pagination / Bullets */
.m-slider .m-slider__pagination {
  display: flex;
  justify-content: center;
  margin-top: 30px;
  bottom: 0;
}
.m-slider .m-slider__pagination .swiper-pagination-bullet {
  border: 1px solid var(--swiper-pagination-bullet-border);
  transition: border var(--base-transition), background var(--base-transition);
  border-radius: var(--swiper-pagination-radius);
}
.m-slider .m-slider__pagination .swiper-pagination-bullet-active, .m-slider .m-slider__pagination .swiper-pagination-bullet:hover {
  border-color: var(--swiper-pagination-bullet-border-active);
}
.m-slider .m-slider__pagination.has-combo-progress .swiper-pagination-progressbar-fill {
  transition: all 300ms;
  transform: scaleX(var(--data-progress));
}
.m-slider .swiper-pagination-progressbar {
  top: auto !important;
  bottom: 0;
}

.c-slider-nav {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: center;
  width: 100%;
}
@media (min-width: 1113px) {
  .c-slider-nav__item {
    flex: 1 1 0;
  }
}
.c-slider-nav .c-photo {
  overflow: hidden;
  display: flex;
  min-width: var(--thumbs-size);
  max-width: var(--thumbs-size);
  width: var(--thumbs-size);
  height: var(--thumbs-size);
  border: var(--thumb-border-width) solid var(--thumb-border-color);
  cursor: pointer;
  transition: all var(--base-transition);
}
.swiper-fade .c-slider-nav .c-photo {
  pointer-events: auto;
}
.c-slider-nav .c-photo img {
  max-width: 100%;
  height: auto;
  margin: auto;
  object-fit: cover;
}
.c-slider-nav .swiper-slide-thumb-active .c-photo {
  border-color: var(--thumb-border-color-active);
}
.c-slider-nav .is-img-rounded {
  border-radius: 50%;
}

.l-slider-fnav {
  margin-bottom: 2rem;
}
.l-slider-fnav .c-fnav {
  display: flex;
}
.l-slider-fnav .c-fnav__item {
  margin-right: 10px;
  display: inline-flex;
}
.l-slider-fnav .c-fnav__item a {
  padding: 0.3em 1em;
}
.l-slider-fnav .c-fnav__item.is-active a,
.l-slider-fnav .c-fnav__item a:hover {
  background: var(--primary-color1);
  color: #fff;
}
.l-slider-fnav .c-slider-fnav__dropdown {
  display: none;
}
.l-slider-fnav.has-dropdown .c-slider-fnav__dropdown {
  display: block;
}

/* Swiper sliders */
.m-slider {
  --swiper-outer-gap: 80px;
  --swiper-arrows-bg: #fff;
  --swiper-arrows-color: var(--primary-color1);
  --swiper-arrows-shadow: 0 12px 14px rgba(33, 33, 33, 0.1), 0 4px 4px rgba(33, 33, 33, 0.1);
  --swiper-pagination-bullet-horizontal-gap: 10px;
  --swiper-pagination-bullet-size: 24px;
  --swiper-pagination-bullet-border: #ccc;
  --swiper-pagination-bullet-inactive-color: #fff;
  --swiper-pagination-bullet-border-active: var(--primary-color1);
  --swiper-pagination-color: var(--primary-color1);
  --swiper-pagination-bullet-inactive-opacity: .8;
  --swiper-pagination-radius: 20px;
  --swiper-navigation-size: 52px;
  --thumbs-size: 65px;
  --thumb-border-width: 2px;
  --thumb-border-color: #fff;
  --thumb-border-color-active: var(--primary-color1);
}
@media (max-width: 1112px) {
  .m-slider {
    --swiper-navigation-size: 35px;
    --swiper-outer-gap: 40px;
    --thumbs-size: 30px;
  }
}
.m-slider .swiper-pagination-progressbar {
  max-width: 65%;
}
@media (min-width: 1113px) {
  .m-slider .swiper-pagination-progressbar {
    max-width: 82%;
  }
}

/* Slider with nav */
.l-slider-banner-advanced .m-banner {
  height: 100%;
}
.l-slider-banner-advanced .l-slider-nav {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
}
.l-slider-banner-advanced .c-slider-nav {
  counter-reset: section;
  gap: 5px;
}
.l-slider-banner-advanced .c-slider-nav__item {
  overflow: hidden;
  min-width: 50px;
  padding: 1em;
  border: 1px solid var(--tab-border-color);
  background: var(--tab-bg);
  color: var(--tab-color);
  position: relative;
  transition: opacity 0.3s;
}
.l-slider-banner-advanced .c-slider-nav__item:after {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  transform: translateY(100%);
  opacity: 0;
  left: 0;
  top: 0;
  transition: opacity 0.3s, transform 0.3s;
  background-color: var(--primary-color2);
}
.l-slider-banner-advanced .c-slider-nav__item.swiper-slide-thumb-active, .l-slider-banner-advanced .c-slider-nav__item.is-active {
  color: var(--tab-color-active);
  background-color: var(--tab-bg-active);
}
@media (max-width: 767px) {
  .l-slider-banner-advanced .c-slider-nav__item.swiper-slide-thumb-active .c-slider-nav__label, .l-slider-banner-advanced .c-slider-nav__item.is-active .c-slider-nav__label {
    display: block;
  }
}
.l-slider-banner-advanced .c-slider-nav__item:not(.swiper-slide-thumb-active):hover {
  cursor: pointer;
}
.l-slider-banner-advanced .c-slider-nav__item:not(.swiper-slide-thumb-active):hover:after {
  transform: translateY(0);
  opacity: 0.3;
}
@media (max-width: 575px) {
  .l-slider-banner-advanced .c-slider-nav__item {
    flex: 0 0 0;
  }
  .l-slider-banner-advanced .c-slider-nav__item.swiper-slide-thumb-active {
    flex: 1 1 0;
  }
}
@media (max-width: 1112px) {
  .l-slider-banner-advanced .c-slider-nav__item.swiper-slide-thumb-active:before {
    opacity: 0;
  }
  .l-slider-banner-advanced .c-slider-nav__item:before {
    counter-increment: section;
    content: "0" counter(section) "";
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    top: 0;
    left: 0;
    transform: translateY(0);
  }
}
.l-slider-banner-advanced .c-slider-nav__label {
  position: relative;
  z-index: 2;
}
@media (max-width: 575px) {
  .l-slider-banner-advanced .c-slider-nav__label {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    display: none;
  }
}

.l-slider-banner-advanced {
  --tab-bg: #fff;
  --tab-color: var(--primary-color2);
  --tab-bg-active: var(--primary-color1);
  --tab-color-active: #fff;
  --tab-border-color: #555;
}

.l-slider-double-cards {
  --dsbls-title-size: 3rem;
  --dsbls-title-weight: 700;
  --dsbls-text-size: 1.8rem;
  --dsbls-color: #fff;
  --dsbls-overlay: var(--primary-color1);
  --dsbls-height: 500px;
}
@media (min-width: 1281px) {
  .l-slider-double-cards {
    --dsbls-height: 680px;
  }
}
@media (min-width: 1441px) {
  .l-slider-double-cards {
    --dsbls-height: 780px;
  }
}

@media (min-width: 1113px) {
  .overflow-right .m-slider__outer {
    margin-right: -50vw;
    overflow: hidden;
    padding-right: calc(50vw + 108px);
  }
  .overflow-right .m-slider__container {
    overflow: visible;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
