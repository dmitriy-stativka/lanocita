/**
 ############################
 #   MODULE: TABS
 ############################
 */
/*
.sixteen-nine {
	@include aspect-ratio(16,9);
}*/
/* Media Queries Breakpoints */
/**
* *******************
*  Usage examples
* *******************
*
//
//  use <=
*   ALWAYS use <= ( '<' with '=' character) for all breakpoints
*   when setting max-width, ex: max-width: 767px,
*
*   so max-width: 1440px  == media('<=desktop-l')
*
* ***********************************************
*
//  use >
*   ALWAYS use only > as single character for all breakpoints
*   when setting min-width, ex: min-width: 768px,
*
*   so min-width: 1025px  == media('>desktop')
*
*************************************************
*
*## EXAMPLE:
*
*   (min-width: 768px) and (max-width: 1024px)
*   =
*   media ('>tablet'), ('<=desktop')
*
//

 */
.l-tbnav {
  display: flex;
  gap: var(--tbnav-gap);
  width: 100%;
  justify-content: center;
  text-align: center;
}
@media (max-width: 1112px) {
  .js-tabs-to-acc-wrapper .l-tbnav {
    display: none;
  }
}
@media (min-width: 1113px) {
  .l-tbnav .js-tabs-dropdown {
    display: none;
  }
}
.l-tbnav__item {
  flex: 1 1 0;
  position: relative;
}
@media (max-width: 1112px) {
  .js-tabsTabDrop-wrapper .l-tbnav__item {
    display: none;
  }
}

.c-tbnav {
  cursor: pointer;
  transition: all var(--base-transition) ease-in;
  padding: var(--tbnav-padding);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: var(--tbnav-align);
  background-color: var(--tbnav-bg);
  color: var(--tbnav-color);
  border: 1px solid var(--tbnav-border);
}
.c-tbnav.is-active {
  --tbnav-bg: var(--tbnav-bg-active);
  box-shadow: var(--c-block-shadow, none);
  border-color: var(--tbnav-border-active);
}
.c-tbnav:not(.is-active):hover {
  box-shadow: var(--c-block-shadow, none);
  border-color: var(--tbnav-border-active);
}
.c-tbnav__media {
  width: 100%;
}
.c-tbnav__label {
  font-size: var(--tbnav-size);
  font-weight: var(--tbnav-weight);
  text-transform: var(--tbnav-uppercase);
}
.c-tbnav__img {
  max-height: 30px;
}
@media (min-width: 768px) {
  .c-tbnav__img {
    max-height: 60px;
  }
}
.c-tbnav:focus {
  outline: none;
}
.c-tbnav:focus-visible {
  outline: 2px solid var(--outline-color);
  outline-offset: 1px;
}

.l-tbpanel {
  /* Mobile Title */
}
.l-tbpanel__item {
  display: none;
}
.wp-admin .l-tbpanel__item {
  display: block;
  margin-bottom: 20px;
}
@media (max-width: 1112px) {
  .js-tabs-to-acc-wrapper .l-tbpanel__item {
    display: block;
  }
  .l-tbpanel__item .c-block {
    flex-direction: column;
  }
}
.l-tbpanel__item .l-accordion {
  display: none;
}
.l-tbpanel__item.is-active {
  display: block;
}
.is-block .l-tbpanel__item.is-active .l-accordion {
  display: block;
}
@media (min-width: 1113px) {
  .l-tbpanel__label {
    display: none;
  }
}
@media (max-width: 1112px) {
  .l-tbpanel__label {
    display: block;
    padding: 10px 20px;
    background-color: var(--tbnav-mobile-bg);
    color: var(--tbnav-mobile-color);
    margin-bottom: 2px;
    position: relative;
  }
  .l-tbpanel__label:before {
    content: "";
    position: absolute;
    width: 9px;
    height: 9px;
    border-top: 2px solid var(--tbnav-mobile-color);
    border-right: 2px solid var(--tbnav-mobile-color);
    right: 14px;
    top: 40%;
    transform: translateY(-50%) rotate(135deg);
    transition: transform 0.1s ease-in;
  }
  .is-active .l-tbpanel__label:before {
    transform: translateY(0) rotate(-45deg);
  }
}

.l-tbpanel__item .c-block {
  opacity: 0;
  transform: translate(-30px);
  transition-property: transform, opacity;
  will-change: opacity, transform;
}
.wp-admin .l-tbpanel__item .c-block {
  opacity: 1;
}
.l-tbpanel__item.is-active .c-block {
  animation: fade-translate-reverse 0.3s linear 1 forwards;
}

.l-tbnav-v6 {
  width: auto;
}
.l-tbnav-v6 .l-tbnav__item {
  flex: 0 0 auto;
  display: flex;
  align-items: flex-end;
}
.l-tbnav-v6 .c-tbnav:before, .l-tbnav-v6 .c-tbnav:after {
  content: "";
  position: absolute;
  opacity: 0;
  transition: all var(--base-transition);
}
.l-tbnav-v6 .c-tbnav:before {
  height: 3px;
  width: 100%;
  left: 0;
  bottom: 0;
  background-color: var(--tbnav-border);
}
.l-tbnav-v6 .c-tbnav:after {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5px 4px 0 4px;
  border-color: var(--tbnav-border) transparent transparent transparent;
  bottom: -5px;
  left: 50%;
  margin-left: -2px;
}
.l-tbnav-v6 .c-tbnav.is-active:before, .l-tbnav-v6 .c-tbnav.is-active:after {
  opacity: 1;
}

.l-tbnav-v9 .c-tbnav {
  cursor: pointer;
  display: flex;
  flex-direction: row;
  align-items: center;
  transition: all var(--base-transition) ease-in;
}
.l-tbnav-v9 .c-tbnav.is-active {
  box-shadow: 0 0 25px #CDEAEC;
  border-color: var(--tbnav-border);
}
.l-tbnav-v9 .c-tbnav.is-active .c-tbnav__deco:after {
  top: -5px;
  opacity: 1;
  transition: all ease-in 0.3s;
}
.l-tbnav-v9 .c-tbnav:not(.is-active):hover {
  box-shadow: 0 0 25px #CDEAEC;
  border-color: #CDEAEC;
}
@media (max-width: 767px) {
  .l-tbnav-v9 .c-tbnav__label {
    display: none;
  }
}
.l-tbnav-v9 .c-tbnav__media {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  margin-bottom: 1em;
  min-height: 70px;
}
.l-tbnav-v9 .c-tbnav__img {
  max-width: 100%;
  max-height: 70px;
  height: auto;
}
@media (max-width: 767px) {
  .l-tbnav-v9 .c-tbnav__img {
    max-width: 90%;
    max-height: 60%;
    margin: 0 auto;
  }
}
.l-tbnav-v9 .c-tbnav__deco {
  --decor-size: 40px;
  display: block;
  width: calc(var(--decor-size) * 2);
  height: var(--decor-size);
  position: absolute;
  overflow: hidden;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
}
@media (max-width: 767px) {
  .l-tbnav-v9 .c-tbnav__deco {
    --decor-size: 20px;
  }
}
.l-tbnav-v9 .c-tbnav__deco:after {
  opacity: 0;
  content: "";
  position: absolute;
  width: var(--decor-size);
  height: var(--decor-size);
  background: var(--tbnav-bg);
  transform: rotate(45deg) translateX(-50%);
  top: -15px;
  left: 50%;
  box-shadow: 0 0 25px #CDEAEC;
  transition: transform 0.3s;
}

.l-tbnav-vTimeline {
  /**
    * TABS: Timeline Tabs requires overflow hidden which can be set in Project Custom Settings
    */
  /**
  * TEXT ABOVE: Text and image above timeline circles.
  * CIRCLES: Text and image inside timeline circles.
  */
  --tbnav-gap: 0;
  --tbnav-tl-animation-lenght: 1s;
  --tbnav-tl-width: 100vw;
  --tbnav-tl-height: 2px;
  --tbnav-tl-color: var(--primary-color2);
  --tbnav-tl-color-active: var(--primary-color1);
  --tbnav-tl-height-active: 10px;
  --tbnav-tl-content-gap: 60px;
  --tbnav-tl-dot: 20px;
  --tbnav-tl-dot-color: #fff;
  --tbnav-tl-dot-border: 3px;
  --tbnav-tl-dot-color-active: var(--primary-color1);
  --tbnav-tl-item-ptb: 15px;
  --tbnav-tl-item-plr: 20px;
  --tbnav-tl-item-text-color: var(--primary-text-color);
  --tbnav-tl-item-text-color-active: var(--primary-color1);
  --tbnav-tl-item-text-padding: 2rem;
  --tbnav-tl-media-width: 70px;
  --tbnav-tl-media-gap: 10px;
  --tbnav-tl-media-pt: calc(var(--tbnav-tl-media-gap) + var(--tbnav-tl-media-width));
  --tbnav-padding: 0;
  margin: 0 auto var(--tbnav-tl-content-gap);
  gap: 5px;
  position: relative;
}
.l-tbnav-vTimeline::before {
  content: "";
  width: var(--tbnav-tl-width);
  height: var(--tbnav-tl-height);
  background: var(--tbnav-tl-color);
  left: 0;
  top: calc(50% + var(--tbnav-tl-dot));
  transform: translate(0, calc(-50% + var(--tbnav-tl-height) / 2));
  z-index: 0;
  pointer-events: none;
  position: absolute;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
}
.l-tbnav-vTimeline.-content {
  --tbnav-tl-width: 100%;
  overflow: hidden;
}
.l-tbnav-vTimeline .l-tbnav__item {
  padding-block: var(--tbnav-tl-item-ptb);
  padding-inline: var(--tbnav-tl-item-plr);
}
.l-tbnav-vTimeline .l-tbnav__item .c-tbnav__label {
  transition: 0.3s ease;
}
.l-tbnav-vTimeline .l-tbnav__item .c-tbnav__media {
  max-width: var(--tbnav-tl-media-width);
  max-height: var(--tbnav-tl-media-width);
  margin-bottom: var(--tbnav-tl-media-gap);
}
.l-tbnav-vTimeline .l-tbnav__item .c-tbnav__media img {
  object-fit: contain;
  object-position: center;
  max-width: 100%;
  max-height: 100%;
}
.l-tbnav-vTimeline .l-tbnav__item::before, .l-tbnav-vTimeline .l-tbnav__item::after {
  content: "";
  position: absolute;
  z-index: -1;
}
.l-tbnav-vTimeline .l-tbnav__item::before {
  width: 100%;
  height: var(--tbnav-tl-height-active);
  background: var(--tbnav-tl-color-active);
  left: 0;
  transform: translate(-50%, calc(-50% + var(--tbnav-tl-height) / 2));
  z-index: 0;
  pointer-events: none;
}
.l-tbnav-vTimeline .l-tbnav__item:first-child .c-tbnav__deco::before, .l-tbnav-vTimeline .l-tbnav__item:last-child .c-tbnav__deco::before {
  content: "";
  position: absolute;
  width: 400%;
  transform: translate(0, calc(-50% + var(--tbnav-tl-height) / 2));
  height: var(--tbnav-tl-height-active);
  background: var(--tbnav-tl-color-active);
  top: 100%;
  left: 50%;
  z-index: 0;
  pointer-events: none;
}
.l-tbnav-vTimeline .l-tbnav__item:first-child .c-tbnav__deco::before {
  right: 0;
  left: unset;
  transform: translate(-25%, calc(-50% + var(--tbnav-tl-height) / 2));
}
.l-tbnav-vTimeline .l-tbnav__item.is-active .c-tbnav__label {
  color: var(--tbnav-tl-color-active);
  transition: 0.3s ease;
}
.l-tbnav-vTimeline .l-tbnav__item.is-active ~ .l-tbnav__item::before {
  display: none;
}
.l-tbnav-vTimeline .l-tbnav__item.is-active ~ .l-tbnav__item::after {
  border: var(--tbnav-tl-dot-border) solid var(--tbnav-tl-color);
  background: var(--tbnav-tl-dot-color);
  transition: 0s;
}
.l-tbnav-vTimeline .l-tbnav__item.is-active ~ .l-tbnav__item:first-child .c-tbnav__deco::before, .l-tbnav-vTimeline .l-tbnav__item.is-active ~ .l-tbnav__item:last-child .c-tbnav__deco::before {
  height: var(--tbnav-tl-height);
  background: var(--tbnav-tl-color);
  z-index: -1;
}
.l-tbnav-vTimeline .l-tbnav__item.is-active:not(:first-child) .c-tbnav__label {
  transition-delay: var(--tbnav-tl-animation-lenght);
}
.l-tbnav-vTimeline .l-tbnav__item.is-active:not(:first-child)::before {
  animation: fill-timeline var(--tbnav-tl-animation-lenght) linear forwards;
}
.l-tbnav-vTimeline .l-tbnav__item.is-active:last-child .c-tbnav__deco::before {
  width: 0;
  animation: fill-timeline-last var(--tbnav-tl-animation-lenght) linear forwards;
  animation-delay: var(--tbnav-tl-animation-lenght);
}
.l-tbnav-vTimeline.-text-above {
  padding-bottom: var(--tbnav-tl-dot);
}
.l-tbnav-vTimeline.-text-above::before {
  top: 100%;
  transform: translateY(calc(var(--tbnav-tl-dot) * -1));
}
.l-tbnav-vTimeline.-text-above .l-tbnav__item::before, .l-tbnav-vTimeline.-text-above .l-tbnav__item::after {
  top: 100%;
}
.l-tbnav-vTimeline.-text-above .l-tbnav__item::after {
  height: var(--tbnav-tl-dot);
  width: var(--tbnav-tl-dot);
  border: var(--tbnav-tl-dot-border) solid var(--tbnav-tl-dot-color-active);
  background: var(--tbnav-tl-dot-color-active);
  border-radius: 500px;
  transform: translateY(calc(-50% + var(--tbnav-tl-height) / 2));
  z-index: 1;
  transition-delay: var(--tbnav-tl-animation-lenght);
}
.l-tbnav-vTimeline.-text-above.-content::after {
  transform: translateY(calc(var(--tbnav-tl-dot) * -1));
  margin-left: 0;
}
.l-tbnav-vTimeline.-circles {
  --tbnav-tl-item-width: 150px;
  --tbnav-tl-item-height: 150px;
  justify-content: space-around !important;
}
.l-tbnav-vTimeline.-circles::before {
  top: 100%;
  transform: translateY(calc(var(--tbnav-tl-item-height) / 2 * -1 + var(--tbnav-tl-item-ptb) * -1));
}
.l-tbnav-vTimeline.-circles .l-tbnav__item {
  justify-content: center;
  background: transparent;
}
.l-tbnav-vTimeline.-circles .l-tbnav__item .c-tbnav__label {
  width: var(--tbnav-tl-item-width);
  max-width: var(--tbnav-tl-item-width);
  height: var(--tbnav-tl-item-height);
  border: var(--tbnav-tl-dot-border) solid var(--tbnav-tl-dot-color-active);
  background: var(--tbnav-tl-dot-color);
  border-radius: 500px;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
  color: var(--tbnav-tl-item-text-color-active);
  padding: var(--tbnav-tl-item-text-padding);
  transition-delay: var(--tbnav-tl-animation-lenght);
}
.l-tbnav-vTimeline.-circles .l-tbnav__item .c-tbnav__media {
  display: none;
}
.l-tbnav-vTimeline.-circles .l-tbnav__item::before, .l-tbnav-vTimeline.-circles .l-tbnav__item::after {
  top: 50%;
  transition: 0s;
}
.l-tbnav-vTimeline.-circles .l-tbnav__item:first-child .c-tbnav__deco::before, .l-tbnav-vTimeline.-circles .l-tbnav__item:last-child .c-tbnav__deco::before {
  top: 50%;
}
.l-tbnav-vTimeline.-circles .l-tbnav__item.is-active ~ .l-tbnav__item .c-tbnav__label {
  color: var(--tbnav-tl-item-text-color);
  border: var(--tbnav-tl-dot-border) solid var(--tbnav-tl-color);
  background: var(--tbnav-tl-dot-color);
  transition-delay: 0s;
}
.l-tbnav-vTimeline.-circles .l-tbnav__item.is-active ~ .l-tbnav__item::after {
  border: var(--tbnav-tl-dot-border) solid var(--tbnav-tl-color);
  background: var(--tbnav-tl-dot-color);
}
.l-tbnav-vTimeline.-circles.-media-above {
  padding-top: var(--tbnav-tl-media-pt);
}
.l-tbnav-vTimeline.-circles.-media-above .l-tbnav__item .c-tbnav__media {
  display: flex;
  position: absolute;
  bottom: calc(100% + var(--tbnav-tl-media-gap));
  margin: 0;
}
.l-tbnav-vTimeline.-circles.-media-inside .l-tbnav__item .c-tbnav__media {
  display: block;
  position: absolute;
  z-index: 3;
  pointer-events: none;
}
.l-tbnav-vTimeline.-circles.-media-inside .l-tbnav__item .c-tbnav__label span {
  top: 100%;
  position: absolute;
}
@keyframes fill-timeline {
  0% {
    width: 0;
    left: -100%;
  }
  100% {
    width: 100%;
    left: 0;
  }
}
@keyframes fill-timeline-last {
  0% {
    width: 0;
  }
  100% {
    width: 400%;
  }
}
/* Tabs */
.m-tabs {
  --tbnav-size: 1.8rem;
  --tbnav-weight: 500;
  --tbnav-uppercase: none;
  --tbnav-bg: #f4f4f4;
  --tbnav-bg-active: #eee;
  --tbnav-color: var(--primary-color1);
  --tbnav-color-active: var(--primary-color3);
  --tbnav-gap: 5%;
  --tbnav-border: #eee;
  --tbnav-border-active: #ccc;
  --tbnav-padding: 15px 20px;
  --tbnav-align: center;
  --tbnav-mobile-bg: var(--primary-color1);
  --tbnav-mobile-color: #fff;
}

.l-tbnav {
  margin: 0 auto 20px;
}
.l-tbnav__item {
  flex: 1 1 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
